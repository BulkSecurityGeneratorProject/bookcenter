#logging:
#  level:
#    root: info

#spring

#minlia:

#    tcp-server:
#        port: 20503
#        autoStart: true

#    i18n:
#        cachedMilliSecond: 2073600000
#        i18nTableName: language
spring:
  profiles: dev
  application:
    name: BookCenter


#  cache:
#    type: redis
#  redis:
#    host: localhost
#    port: 6379

#    redis:
#      cache-null-values: true
#      key-prefix: cfpay
#      time-to-live: 864000
#      use-key-prefix: true



  devtools:
    restart:
      enabled: false

  # DATASOURCE
  datasource:
#    # Name of the datasource. Default to "testdb" when using an embedded database.
#    name:
#    # Whether to generate a random datasource name.
#    generate-unique-name: false
#    # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#    type:
    # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
    # mysql
    driver-class-name: net.sf.log4jdbc.DriverSpy
    # sql server
#    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    # JDBC URL of the database.
    # mysql
    url: jdbc:log4jdbc:mysql://localhost:3306/book_center?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&autoReconnect=true&verifyServerCertificate=false&useSSL=false&sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false&allowMultiQueries=true
    # sql server
#    url: jdbc:sqlserver://localhost:1433;databaseName=book_center
    # Login username of the database.
    # mysql
    username: root
    # sql server
#    username: SA
    # Login password of the database.
    # mysql
    password:
    # sql server
#    password: <YourStrong!Passw0rd>
    # JNDI location of the datasource. Class, url, username & password are ignored when set.
#    jndi-name:
    # Initialize the datasource with available DDL and DML scripts.
    initialization-mode: always
    # Platform to use in the DDL or DML scripts (such as schema-${platform}.sql or data-${platform}.sql).
    platform: mysql
#    # Schema (DDL) script resource references.
#    schema:
#    # Username of the database to execute DDL scripts (if different).
#    schema-username:
#    # Password of the database to execute DDL scripts (if different).
#    schema-password:
#    # Data (DML) script resource references.
#    data:
#    # Username of the database to execute DML scripts (if different).
#    data-username:
#    # Password of the database to execute DML scripts (if different).
#    data-password:
    # Whether to stop if an error occurs while initializing the database.
    continue-on-error: true
#    # Statement separator in SQL initialization scripts.
#    separator: ";"
#    # SQL scripts encoding.
#    sql-script-encoding: UTF-8
#    # Whether to enable JMX support (if provided by the underlying pool).
#    jmx-enabled: true

  # JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
  data:
    jpa:
      repositories:
        enabled: true # Whether to enable JPA repositories.
  jpa:
#    database: # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#    database-platform: # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
    generate-ddl: true # Whether to initialize the schema on startup.
    hibernate:
      ddl-auto: create-drop # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
#      naming:
#        implicit-strategy: # Fully qualified name of the implicit naming strategy.
#        physical-strategy: # Fully qualified name of the physical naming strategy.
#      use-new-id-generator-mappings: # Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#    mapping-resources: # Mapping resources (equivalent to "mapping-file" entries in persistence.xml).
#    open-in-view: true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#    properties.*: # Additional native properties to set on the JPA provider.
    show-sql: false # Whether to enable logging of SQL statements.




#  h2:
#    console:
#      enabled: true
#      path: /console



  profiles:
    active: dev
#  messages:
#    fallback-to-system-locale: true
#    use-code-as-default-message: true
#    cache-duration: P300DT12H0M
#    encoding: UTF-8
#    always-use-message-format: true
#    basename: classpath:/exceptionApiCode




system:

  mvc:
    loggable:
      enabled: true

  development:
    swagger:
      enabled: true

  api-exception:
    handler:
      enabled: true

  context-holder:
    enabled: true

  i18n:
    enabled: true
    select-one-i18n-item-sql: "select message from language where code = ? and language = ? and country = ? limit 1"




swagger:
    title: ${spring.application.name}接口
    description: ${spring.application.name}接口
    version: 1.0
    contact: badcop@163.com
    path: /api/.*
    redirect: true
